I"¼<p>ðŸ“Œ To get all riddles or an individual riddle</p>

<table>
  <thead>
    <tr>
      <th>HTTP Method</th>
      <th>Endpoint</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">GET</code></td>
      <td>/riddles</td>
      <td>Returns Riddle objects</td>
    </tr>
  </tbody>
</table>

<p class="info">Use the optional <code class="language-plaintext highlighter-rouge">id</code> query parameter to have the corresponding Riddle object returned. Omit the query parameter to have an array of all the Riddle objects in the database returned.</p>

<p>The optional query parameter is defined as</p>

<table>
  <thead>
    <tr>
      <th>Parameter</th>
      <th>Type</th>
      <th>Required</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>id</td>
      <td>string</td>
      <td>Optional</td>
      <td>If the database id for a riddle is known, use this parameter to get that specific Riddle object. <strong>Omit for all riddles to be returned.</strong></td>
    </tr>
  </tbody>
</table>

<p class="info">Lists all the photos you have access to. You can paginate by using the parameters listed above.</p>

<p class="success"><strong>Example request</strong></p>

<p>A curl request to get <em>all</em> riddles:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -X GET 'https://riddlesapidoc.vercel.app/riddles'
</code></pre></div></div>

<p class="success"><strong>Example request</strong></p>

<p>A successful response has an HTTP status code of <code class="language-plaintext highlighter-rouge">200</code> and is an array of Riddle objects:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  HTTP/1.1 200 OK
Content-Type: application/json; charset=utf-8
  {
    "_id": "60bc3ffb5dcf8ac52f16a7fd",
    "riddle": "What has to be broken before you can use it?",
    "answer": "An egg",
    "category": "easy",
    "source": "https://parade.com/947956/parade/riddles/"
  },
  {
    "_id": "60bc3ffb5dcf8ac52f16a800",
    "riddle": "I'm tall when I'm young, and I'm short when I'm old. What am I?",
    "answer": "A candle",
    "category": "easy",
    "source": "https://parade.com/947956/parade/riddles/"
  }
</code></pre></div></div>
<p>The Riddle object returned uses this schema:</p>

<table>
  <thead>
    <tr>
      <th>Field</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>_id</td>
      <td>string</td>
      <td>The database id for the Riddle object</td>
    </tr>
    <tr>
      <td>riddle</td>
      <td>string</td>
      <td>The riddleâ€™s question</td>
    </tr>
    <tr>
      <td>answer</td>
      <td>string</td>
      <td>The riddleâ€™s answer</td>
    </tr>
    <tr>
      <td>category</td>
      <td>string</td>
      <td>A classification of the riddle. The original database includes the categories: easy, hard, funny, kids, math, and word. This is not an enum and more can be added.</td>
    </tr>
    <tr>
      <td>source</td>
      <td>string</td>
      <td>The source of the riddle</td>
    </tr>
  </tbody>
</table>

<p><strong>Possible error responses</strong></p>

<p>A <code class="language-plaintext highlighter-rouge">GET</code> request to the /riddles endpoint may return the following errors:</p>

<table>
  <thead>
    <tr>
      <th>Error code</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>404</td>
      <td><code class="language-plaintext highlighter-rouge">Not Found</code>: This error will occur if the requested riddle <code class="language-plaintext highlighter-rouge">id</code> is not found in the database. It could also occur if the database is empty.</td>
    </tr>
    <tr>
      <td>500</td>
      <td><code class="language-plaintext highlighter-rouge">Internal Server Error</code>: An unexpected error occurred on the server.</td>
    </tr>
  </tbody>
</table>
:ET